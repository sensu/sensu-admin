:css
  .wide-popover
  {
    width: 640px;
  }

- @events.each_with_index do |event,i|
  - processed_clients = []
  %div{:class => "modal hide", :id => "modal_#{event.client}_#{event.check}"}
    %div.modal-header
      %h3== Silence Check #{event.check} on client #{event.client}
    %div.modal-body
      %h3 Enter reason
      %textarea.input-xlarge.silence-input{:id => "text_input_#{event.client}_#{event.check}", :index_id => "#{i}", :misc => "#{event.client}_#{event.check}", :rel => "Silence Check", :rows => "3", :type => "text", :placeholder => "Silence Check Reason"}
    %div.modal-footer
      %a.silence-submit-event{:control => "silence_submit_#{event.client}_#{event.check}", :index_id => "#{i}", :hidden => 'true', :misc => "#{event.client}_#{event.check}", :rel => "#{request.url}/#{event.client}/#{event.check}/silence"} Submit
  - unless processed_clients.include?(event.client)
    - processed_clients << event.client
    %div{:class => "modal hide", :id => "modal_#{event.client}"}
      %div.modal-header
        %h3== Silence Client #{event.client}
      %div.modal-body
        %h3 Enter reason
        %textarea.input-xlarge.silence-input{:id => "text_input_#{event.client}", :index_id => "#{i}", :misc => "#{event.client}", :rel => "Silence Check", :rows => "3", :type => "text", :placeholder => "Silence Client Reason"}
      %div.modal-footer
        %a.silence-submit-event{:control => "silence_submit_#{event.client}", :client_silence => "client_silencer_#{i}", :index_id => "#{i}", :hidden => 'true', :misc => "#{event.client}", :rel => "#{request.url}/#{event.client}/silence"} Submit
  %div{:class => "modal hide", :id => "event-#{i}"}
    %div.modal-header
      %h3= "Client: #{event.client} Check: #{event.check}"
    %div.modal-body
      %table.table.table-striped.table-bordered
        %tbody
          %tr
            %td Output
            %td= event.output
          %tr
            %td Occurrences
            %td= event.occurrences
          %tr
            %td Status
            %td= format_status(event.status)
          %tr
            %td Occured
            %td= Time.at(event.issued)
          %tr
            %td Flapping
            %td= event.flapping
          %tr
            %td Check Silenced
            %td{:rel => "#{event.client}_#{event.check}_column_silenced"}= ((event.check_silenced.nil?) ? "No" : event.check_silenced.to_s)
          %tr
            %td Client Silenced
            %td{:rel => "#{event.client}_column_silenced"}= ((event.client_silenced.nil?) ? "No" : event.client_silenced.to_s)
          - event.client_attributes.each do |k,v|
            %tr
              %td= k
              %td= v
    %div.modal-footer
      /
      / TODO: This needs to be moved into partials probably and remove a disturbing number of attribs
      /
      %div
        %a.silence-event{:control => "silence_#{event.client}_#{event.check}", :hidden => not_nil?(event.check_silenced), :index_id => "#{i}", :misc => "#{event.client}_#{event.check}", :rel => "#{request.url}/#{event.client}/#{event.check}/silence"} Silence Check
        %a.unsilence-submit-event{:control => "unsilence_#{event.client}_#{event.check}", :hidden => is_nil?(event.check_silenced), :index_id => "#{i}", :misc => "#{event.client}_#{event.check}", :rel => "#{request.url}/#{event.client}/#{event.check}/unsilence"} Unsilence Check
      %div
        %a.silence-event{:control => "silence_#{event.client}", :hidden => not_nil?(event.client_silenced), :index_id => "#{i}", :misc => "#{event.client}", :rel => "#{request.url}/#{event.client}/silence"} Silence Client
        %a.unsilence-submit-event{:control => "unsilence_#{event.client}", :hidden => is_nil?(event.client_silenced), :index_id => "#{i}", :misc => "#{event.client}", :rel => "#{request.url}/#{event.client}/unsilence"} Unsilence Client
      %div
        %a.resolve-event{:misc => "#row-event-#{i}", :rel => "#{request.url}/#{event.client}/#{event.check}/resolve"} Resolve

%table.table.table-striped
  %thead
    %th Status 
    %th ENV
    %th Client
    %th Check
    %th Output
    %th Silenced
    %th Occurred
    %th #
      
  %tbody
    - @events.each_with_index do |event,i|
      %tr{:id => "row-event-#{i}", :rel => "#event-#{i}"}
        %td.moreinfo
          / TODO: Make this into a helper that renders using haml_tag
          - if event.status == 1
            %span.badge.badge-important
              = format_status(event.status)
          - elsif event.status == 2
            %span.badge.badge-warning
              = format_status(event.status)
          - else
            %span.badge.badge-inverse
              = format_status(event.status)
        %td.moreinfo= event.client_attributes['environment']
        %td.moreinfo= event.client
        %td.moreinfo= event.check
        %td.moreinfo.rowpopup{:title => "Check Output", 'data-content' => event.output}
          = format_output(event.output)
        %td.columnpopup{:rel => "#{event.client}_popup_info", :title => "Check Silence", 'data-content' => silenced_output(event.check_silenced, event.client_silenced)}
          %div.btn-group
            %button.btn.btn-info.dropdown-toggle{'data-toggle' => 'dropdown'}
              - display_silenced(event, i)
              %span.caret
            %ul.dropdown-menu
              %li
                %a.silence-event{:control => "silence_#{event.client}", :index_id => "#{i}", :hidden => not_nil?(event.client_silenced), :misc => "#{event.client}", :rel => "#{request.url}/#{event.client}/silence", :href => "#"} Silence Client
              %li
                %a.unsilence-submit-event{:control => "unsilence_#{event.client}", :index_id => "#{i}", :hidden => is_nil?(event.client_silenced), :misc => "#{event.client}", :rel => "#{request.url}/#{event.client}/unsilence", :href => "#"} UnSilence Client
              %li
                %a.silence-event{:control => "silence_#{event.client}_#{event.check}", :index_id => "#{i}", :hidden => not_nil?(event.check_silenced), :misc => "#{event.client}_#{event.check}", :rel => "#{request.url}/#{event.client}/#{event.check}/silence", :href => "#"} Silence Check
              %li
                %a.unsilence-submit-event{:control => "unsilence_#{event.client}_#{event.check}", :index_id => "#{i}", :hidden => is_nil?(event.check_silenced), :misc => "#{event.client}_#{event.check}", :rel => "#{request.url}/#{event.client}/#{event.check}/unsilence", :href => "#"} UnSilence Check
              %li
                %a.resolve-event{:misc => "#row-event-#{i}", :index_id => "#{i}", :rel => "#{request.url}/#{event.client}/#{event.check}/resolve"} Resolve
        %td= time_ago_in_words(Time.at(event.issued)) + " ago"
        %td.moreinfo= event.occurrences
